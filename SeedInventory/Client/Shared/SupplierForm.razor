@using System.Net.Http.Json
@using SeedInventory.Shared.Models
@inject HttpClient Http 

<div class="modal" tabindex="-1" style="display:@(Visible ? "block" : "none"); background: rgba(0,0,0,0.4)">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="Model" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-2">
                        <label class="form-label">Name</label>
                        <InputText class="form-control" @bind-Value="Model.Name" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Contact</label>
                        <InputText class="form-control" @bind-Value="Model.Contact" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Address</label>
                        <InputTextArea class="form-control" @bind-Value="Model.Address" />
                    </div>

                    <div class="text-end">
                        <button type="button" class="btn btn-secondary me-2" @onclick="Close">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnSaved { get; set; }
    public bool Visible { get; set; }
    public string Title { get; set; } = "Add Supplier";
    public Supplier Model { get; set; } = new Supplier();

    public void Open(Supplier supplier)
    {
        Model = supplier;
        Title = supplier.Id == 0 ? "Add Supplier" : "Edit Supplier";
        Visible = true;
        StateHasChanged();
    }

    void Close() => Visible = false;

    async Task Save()
    {
        if (Model.Id == 0)
        {
            var response = await Http.PostAsJsonAsync("api/suppliers", Model);
            response.EnsureSuccessStatusCode();
        }
        else
        {
            var response = await Http.PutAsJsonAsync($"api/suppliers/{Model.Id}", Model);
            response.EnsureSuccessStatusCode();
        }

        Visible = false;
        await OnSaved.InvokeAsync();
    }
}
