@using System.Net.Http.Json
@using SeedInventory.Shared.Models
@inject HttpClient Http

<div class="modal" tabindex="-1" style="display:@(Visible ? "block" : "none"); background: rgba(0,0,0,0.4)">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="Model" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="row g-2">
                        <div class="col-md-4">
                            <label class="form-label">Name</label>
                            <InputText class="form-control" @bind-Value="Model.Name" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Variety</label>
                            <InputText class="form-control" @bind-Value="Model.Variety" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Batch No</label>
                            <InputText class="form-control" @bind-Value="Model.BatchNo" />
                        </div>
                        <div class="col-md-4">
                            <label>Unit</label>
                            <InputSelect class="form-select" @bind-Value="Model.UnitId">
                                <option value="">--None--</option>
                                @foreach (var un in Units)
                                {
                                    <option value="@un.Id">@un.UnitName</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Quantity</label>
                            <InputNumber class="form-control" @bind-Value="Model.Quantity" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Purchase Date</label>
                            <InputDate class="form-control" @bind-Value="Model.PurchaseDate" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Expire Date</label>
                            <InputDate class="form-control" @bind-Value="Model.ExpiryDate" />
                        </div>
                        <div class="col-md-4">
                            <label>Supplier / Recipient (optional)</label>
                            <InputSelect class="form-select" @bind-Value="Model.SupplierId">
                                <option value="">--None--</option>
                                @foreach (var sp in Suppliers)
                                {
                                    <option value="@sp.Id">@sp.Name</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Notes</label>
                            <InputTextArea class="form-control" @bind-Value="Model.Notes" />
                        </div>
                    </div>

                    <div class="mt-3 text-end">
                        <button type="button" class="btn btn-secondary me-2" @onclick="Close">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnSaved { get; set; }
    [Parameter] public List<Supplier> Suppliers { get; set; } = new();
    [Parameter] public List<Unit> Units { get; set; } = new();
    public bool Visible { get; set; }
    public string Title { get; set; } = "Add Seed";
    public Seed Model { get; set; } = new Seed();

    public void Open(Seed seed)
    {
        Model = seed;
        Title = seed.Id == 0 ? "Add Seed" : "Edit Seed";
        Visible = true;
        StateHasChanged();
    }

    void Close()
    {
        Visible = false;
    }
  

    protected override async Task OnInitializedAsync()
    {
        Suppliers = await Http.GetFromJsonAsync<List<Supplier>>("api/suppliers");
    }
    async Task Save()
    {
        if (Model.Id == 0)
        {
            var response = await Http.PostAsJsonAsync("api/seeds", Model);
            response.EnsureSuccessStatusCode();
        }
        else
        {
            var response = await Http.PutAsJsonAsync($"api/seeds/{Model.Id}", Model);
            response.EnsureSuccessStatusCode();
        }

        Visible = false;
        await OnSaved.InvokeAsync();
    }
}
